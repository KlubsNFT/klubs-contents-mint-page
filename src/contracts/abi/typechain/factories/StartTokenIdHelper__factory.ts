/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StartTokenIdHelper } from "../StartTokenIdHelper";

export class StartTokenIdHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    startTokenId_: BigNumberish,
    overrides?: Overrides
  ): Promise<StartTokenIdHelper> {
    return super.deploy(
      startTokenId_,
      overrides || {}
    ) as Promise<StartTokenIdHelper>;
  }
  getDeployTransaction(
    startTokenId_: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(startTokenId_, overrides || {});
  }
  attach(address: string): StartTokenIdHelper {
    return super.attach(address) as StartTokenIdHelper;
  }
  connect(signer: Signer): StartTokenIdHelper__factory {
    return super.connect(signer) as StartTokenIdHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StartTokenIdHelper {
    return new Contract(address, _abi, signerOrProvider) as StartTokenIdHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516100db3803806100db83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b607d8061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e6798baa14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea2646970667358221220109a7192c75bf1fe8b0e18cd299073b2a57c45f62145ba987a0f985caa97c33764736f6c63430008090033";
