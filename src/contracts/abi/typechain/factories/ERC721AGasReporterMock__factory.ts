/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC721AGasReporterMock } from "../ERC721AGasReporterMock";

export class ERC721AGasReporterMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): Promise<ERC721AGasReporterMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AGasReporterMock>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721AGasReporterMock {
    return super.attach(address) as ERC721AGasReporterMock;
  }
  connect(signer: Signer): ERC721AGasReporterMock__factory {
    return super.connect(signer) as ERC721AGasReporterMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AGasReporterMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AGasReporterMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTenAsc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTenAvg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTenDesc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001394380380620013948339810160408190526200003491620001e6565b8151829082906200004d90600290602085019062000073565b5080516200006390600390602084019062000073565b5060008055506200028d92505050565b828054620000819062000250565b90600052602060002090601f016020900481019282620000a55760008555620000f0565b82601f10620000c057805160ff1916838001178555620000f0565b82800160010185558215620000f0579182015b82811115620000f0578251825591602001919060010190620000d3565b50620000fe92915062000102565b5090565b5b80821115620000fe576000815560010162000103565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014157600080fd5b81516001600160401b03808211156200015e576200015e62000119565b604051601f8301601f19908116603f0116810190828211818310171562000189576200018962000119565b81604052838152602092508683858801011115620001a657600080fd5b600091505b83821015620001ca5785820183015181830184015290820190620001ab565b83821115620001dc5760008385830101525b9695505050505050565b60008060408385031215620001fa57600080fd5b82516001600160401b03808211156200021257600080fd5b62000220868387016200012f565b935060208501519150808211156200023757600080fd5b5062000246858286016200012f565b9150509250929050565b600181811c908216806200026557607f821691505b602082108114156200028757634e487b7160e01b600052602260045260246000fd5b50919050565b6110f7806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063bcd9bbbc1161007c578063bcd9bbbc14610282578063c87b56dd14610295578063db6745f8146102a8578063e985e9c5146102bb578063ef9c0bec146102f7578063fa695a971461030a57600080fd5b806370a082311461022e57806381861f841461024157806395d89b4114610254578063a22cb4651461025c578063b88d4fde1461026f57600080fd5b806318160ddd116100ff57806318160ddd146101cc57806323b872dd146101e257806342842e0e146101f55780634da42e58146102085780636352211e1461021b57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a45780630ff4ba63146101b9575b600080fd5b61014f61014a366004610d5e565b61031d565b60405190151581526020015b60405180910390f35b61016c61036f565b60405161015b9190610dd3565b61018c610187366004610de6565b610401565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004610e1b565b610445565b005b6101b76101c7366004610e45565b6104e5565b600154600054035b60405190815260200161015b565b6101b76101f0366004610e60565b610560565b6101b7610203366004610e60565b610570565b6101b7610216366004610e45565b61058b565b61018c610229366004610de6565b610603565b6101d461023c366004610e45565b61060e565b6101b761024f366004610e45565b610654565b61016c61065f565b6101b761026a366004610e9c565b61066e565b6101b761027d366004610eee565b610704565b6101b7610290366004610e45565b61074e565b61016c6102a3366004610de6565b6107ba565b6101b76102b6366004610e45565b61084c565b61014f6102c9366004610fca565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101b7610305366004610e45565b610857565b6101b7610318366004610e45565b610862565b60006301ffc9a760e01b6001600160e01b03198316148061034e57506380ac58cd60e01b6001600160e01b03198316145b806103695750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461037e90610ffd565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa90610ffd565b80156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b600061040c8261086d565b610429576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061045082610894565b9050336001600160a01b038216146104895761046c81336102c9565b610489576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6104f133826000610560565b6104fd33826001610560565b61050933826002610560565b61051533826003610560565b61052133826004610560565b61052d33826005610560565b61053933826006610560565b61054533826007610560565b61055133826008610560565b61055d33826009610560565b50565b61056b8383836108f5565b505050565b61056b83838360405180602001604052806000815250610704565b61059733826009610560565b6105a333826008610560565b6105af33826007610560565b6105bb33826006610560565b6105c733826005610560565b6105d333826004610560565b6105df33826003610560565b6105eb33826002610560565b6105f733826001610560565b61055d33826000610560565b600061036982610894565b60008161062e576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b61055d81600a610aa5565b60606003805461037e90610ffd565b6001600160a01b0382163314156106985760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61070f8484846108f5565b6001600160a01b0383163b156107485761072b84848484610ac3565b610748576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b61075a33826004610560565b61076633826005610560565b61077233826003610560565b61077e33826006610560565b61078a33826002610560565b61079633826007610560565b6107a233826001610560565b6107ae33826008610560565b61055133826000610560565b60606107c58261086d565b6107e257604051630a14c4b560e41b815260040160405180910390fd5b60006107f960408051602081019091526000815290565b905080516000141561081a5760405180602001604052806000815250610845565b8061082484610bba565b604051602001610835929190611038565b6040516020818303038152906040525b9392505050565b61055d816001610aa5565b61055d81600a610c09565b61055d816001610c09565b6000805482108015610369575050600090815260046020526040902054600160e01b161590565b6000816000548110156108dc57600081815260046020526040902054600160e01b81166108da575b806108455750600019016000818152600460205260409020546108bc565b505b604051636f96cda160e11b815260040160405180910390fd5b600061090082610894565b9050836001600160a01b0316816001600160a01b0316146109335760405162a1148160e81b815260040160405180910390fd5b6000828152600660205260408120546001600160a01b0390811691908616331480610963575061096386336102c9565b8061097657506001600160a01b03821633145b90508061099657604051632ce44b5f60e11b815260040160405180910390fd5b846109b457604051633a954ecd60e21b815260040160405180910390fd5b81156109d757600084815260066020526040902080546001600160a01b03191690555b6001600160a01b03868116600090815260056020908152604080832080546000190190559288168252828220805460010190558682526004905220600160e11b4260a01b871781179091558316610a5c5760018401600081815260046020526040902054610a5a576000548114610a5a5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610abf828260405180602001604052806000815250610cdb565b5050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610af8903390899088908890600401611067565b602060405180830381600087803b158015610b1257600080fd5b505af1925050508015610b42575060408051601f3d908101601f19168201909252610b3f918101906110a4565b60015b610b9d573d808015610b70576040519150601f19603f3d011682016040523d82523d6000602084013e610b75565b606091505b508051610b95576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810191829052607f0190826030600a8206018353600a90045b8015610bf757600183039250600a81066030018353600a9004610bd9565b50819003601f19909101908152919050565b60005482610c2957604051622e076360e81b815260040160405180910390fd5b81610c475760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660009081526005602090815260408083208054680100000000000000018702019055838352600490915281204260a01b85176001851460e11b1790555b60405160018201918301906001600160a01b038616906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4828110610c8e57500160005550565b610ce58383610c09565b6001600160a01b0383163b1561056b576000548281035b610d0f6000868380600101945086610ac3565b610d2c576040516368d2bf6b60e11b815260040160405180910390fd5b818110610cfc578160005414610d4157600080fd5b5050505050565b6001600160e01b03198116811461055d57600080fd5b600060208284031215610d7057600080fd5b813561084581610d48565b60005b83811015610d96578181015183820152602001610d7e565b838111156107485750506000910152565b60008151808452610dbf816020860160208601610d7b565b601f01601f19169290920160200192915050565b6020815260006108456020830184610da7565b600060208284031215610df857600080fd5b5035919050565b80356001600160a01b0381168114610e1657600080fd5b919050565b60008060408385031215610e2e57600080fd5b610e3783610dff565b946020939093013593505050565b600060208284031215610e5757600080fd5b61084582610dff565b600080600060608486031215610e7557600080fd5b610e7e84610dff565b9250610e8c60208501610dff565b9150604084013590509250925092565b60008060408385031215610eaf57600080fd5b610eb883610dff565b915060208301358015158114610ecd57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0457600080fd5b610f0d85610dff565b9350610f1b60208601610dff565b925060408501359150606085013567ffffffffffffffff80821115610f3f57600080fd5b818701915087601f830112610f5357600080fd5b813581811115610f6557610f65610ed8565b604051601f8201601f19908116603f01168101908382118183101715610f8d57610f8d610ed8565b816040528281528a6020848701011115610fa657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdd57600080fd5b610fe683610dff565b9150610ff460208401610dff565b90509250929050565b600181811c9082168061101157607f821691505b6020821081141561103257634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161104a818460208801610d7b565b83519083019061105e818360208801610d7b565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061109a90830184610da7565b9695505050505050565b6000602082840312156110b657600080fd5b815161084581610d4856fea264697066735822122024e45a44e8d0454c1dddf52a22cb975e1c8afd195d3962f4f282171aaac232df64736f6c63430008090033";
